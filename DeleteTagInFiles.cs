using System;
using System.Collections.Generic;
using HtmlAgilityPack;
using System.Threading;

namespace DeleteTag
{
    public class DeleteTagInFiles
    {
        private string[] files;
        private string tag;
        private int totalCountRemoved = 0;
        private bool runOrStop = false;

        public void SetFiles(string[] array)
        {
            files=array;
        }

        public string[] GetFiles()
        {
            return files;
        }

        public string SetTagXPath
        {
            get { return tag; }
            set { tag = value; }
        }

        public int GetCountRemoved
        {
            get { return totalCountRemoved; }
        }

        public delegate void MethodContainer(string log);
        public event MethodContainer ToLog;

        public int Run()
        {
            runOrStop = true;
            var doc = new HtmlDocument();
            int i = 0;

            if (files.Length == 0 || tag.Length == 0)
            {
                throw new Exception("Файл(-ы) или удаляемый тег, не заданы.");
            }

            while (i < files.Length && runOrStop)
            {
                //Thread.Sleep(300);
                doc.Load(files[i]);
                var nodesToRemove = doc.DocumentNode.SelectNodes(tag);
                if (nodesToRemove != null)
                {
                    foreach(var node in nodesToRemove)
                    {
                        node.Remove();
                        totalCountRemoved++;
                    }

                    if (ToLog != null)
                    {
                        string strToLog = /*DateTime.Now.ToString("hh:mm:ss") + */
                                          files[i] + " - " + 
                                          nodesToRemove.Count + " occurence removed:\n";
                        foreach (var node in nodesToRemove)
                        {
                            strToLog += node.WriteTo() + "\n";
                        }
                        ToLog(strToLog);
                    }

                    doc.Save(files[i]);
                }
                i++;
            }

            if (ToLog != null)
            {
                if (runOrStop)
                    ToLog("Operation was finished successfully. Total removed items: " + totalCountRemoved);
                else
                    ToLog("Operation was interrupted. Total removed items: " + totalCountRemoved);
            }
            return totalCountRemoved;
        }

        public void Stop()
        {
            runOrStop = false;
        }
    }   
}
